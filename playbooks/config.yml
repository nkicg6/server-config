---
- hosts: all
  become: true
  pre_tasks:

  - name: Update Ubuntu packages
    tags: config
    ansible.builtin.apt:
      upgrade: yes
      update_cache: yes
    when: ansible_distribution == "Ubuntu"

  - name: Update Rocky packages
    tags: config
    ansible.builtin.dnf:
      update_only: yes
      update_cache: yes
    when: ansible_distribution == "Rocky"

  - name: Check if reboot required
    tags:
      - config
    ansible.builtin.stat:
      path: /var/run/reboot-required
    register: boot

  post_tasks:
  
  - name: clean deps apt
    tags: config
    ansible.builtin.apt:
      autoremove: yes
      autoclean: yes
    when: ansible_distribution == "Ubuntu"

  - name: clean deps dnf
    tags: config
    ansible.builtin.dnf:
      autoremove: yes
    when: ansible_distribution == "Rocky"

  - name: Start fail2ban daemon
    tags:
      - firewall
      - config
    ansible.builtin.systemd:
      state: restarted 
      name: fail2ban
      enabled: yes

  - name: Restart sshd
    tags:
      - config
      - ssh
    ansible.builtin.systemd:
      state: restarted
      name: sshd
      enabled: yes

  - name: Reboot if needed
    reboot:
      connect_timeout: 5
      reboot_timeout: 300
      pre_reboot_delay: 0
      post_reboot_delay: 30
      test_command: uptime
    when: boot.stat.exists

  tasks:

  - name: Set hostname
    tags: config
    ansible.builtin.hostname:
      name: "{{ new_hostname }}"
      use: systemd

  - name: Ensure login is secure
    tags:
      - config
      - ssh
    ansible.builtin.lineinfile:
      path: /etc/ssh/sshd_config
      state: present
      line: "PasswordAuthentication no"
      regexp: '#?\s?PasswordAuthentication\s?\w{2}\w?'

  - name: Ensure no root ssh password
    tags:
      - config
      - ssh
    ansible.builtin.lineinfile:
      path: /etc/ssh/sshd_config
      state: present
      line: "PermitRootLogin prohibit-password"
      regexp: '#?\s?PermitRootLogin\s?\w{2}\w?' 

  - name: fail2ban Ubuntu
    tags:
      - firewall
      - config
    ansible.builtin.apt:
      update_cache: yes
      name: fail2ban
      state: latest
    when: ansible_distribution == "Ubuntu"

  - name: fail2ban Rocky deps
    tags:
      - firewall
      - config
    ansible.builtin.dnf:
      name: epel-release
      state: latest
    when: ansible_distribution == "Rocky"

  - name: fail2ban Rocky
    tags:
      - firewall
      - config
    ansible.builtin.dnf:
      name: fail2ban
      state: latest
    when: ansible_distribution == "Rocky"

  - name: configure fail2ban ssh jail
    tags:
      - firewall
      - config
    ansible.builtin.copy:
      src: ../configs/jail.local
      dest: /etc/fail2ban/jail.local
      owner: root
      group: root
